package com.hereliesaz.blusnu.correlator

import android.content.Context
import com.hereliesaz.blusnu.data.TargetDevice
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.withContext
import org.json.JSONArray
import org.json.JSONObject

data class Vulnerability(val name: String, val uuid: String, val description: String)

class VulnerabilityCorrelator(private val context: Context) {

    private var vulnerabilities: List<Vulnerability> = emptyList()

    suspend fun loadVulnerabilities() {
        withContext(Dispatchers.IO) {
            val jsonString = context.assets.open("vulnerabilities.json").bufferedReader().use { it.readText() }
            val jsonArray = JSONArray(jsonString)
            val result = mutableListOf<Vulnerability>()
            for (i in 0 until jsonArray.length()) {
                val jsonObject = jsonArray.getJSONObject(i)
                result.add(
                    Vulnerability(
                        name = jsonObject.getString("name"),
                        uuid = jsonObject.getString("uuid"),
                        description = jsonObject.getString("vulnerability")
                    )
                )
            }
            vulnerabilities = result
        }
    }

    fun correlate(device: TargetDevice): List<Vulnerability> {
        return vulnerabilities.filter { vulnerability ->
            device.services.any { service -> service.equals(vulnerability.uuid, ignoreCase = true) }
        }
    }
}